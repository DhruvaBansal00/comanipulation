<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->  
  <arg name="kinova_robotType" default="j2s7s300"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!-- <arg name="use_trajectory_controller" default="false"/> -->
  <arg name="is7dof" default="true"/>

    <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find kinova_description)/urdf/$(arg kinova_robotType)_sim_standalone.xacro'" />

<!-- BEGIN SECTION: Gazebo
    Nodes in this section launch Gazebo-related elements -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find kinova_gazebo)/worlds/jaco.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>



  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- For the 6DOF -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" unless="$(arg is7dof)"
    args="-urdf -model $(arg kinova_robotName) -param robot_description
        -J $(arg kinova_robotType)_joint_1 0.0
        -J $(arg kinova_robotType)_joint_2 2.9
        -J $(arg kinova_robotType)_joint_3 1.3
        -J $(arg kinova_robotType)_joint_4 -2.07
        -J $(arg kinova_robotType)_joint_5 1.4
        -J $(arg kinova_robotType)_joint_6 0.0
        -J $(arg kinova_robotType)_joint_finger_1 1.0
        -J $(arg kinova_robotType)_joint_finger_2 1.0
        -J $(arg kinova_robotType)_joint_finger_3 1.0" />

  <!-- For the 7DOF -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" if="$(arg is7dof)"
    args="-urdf -model $(arg kinova_robotName) -param robot_description
        -x -0.5 -y 0.2 -z 0.8
        -J $(arg kinova_robotType)_joint_1 0.0
        -J $(arg kinova_robotType)_joint_2 2.9
        -J $(arg kinova_robotType)_joint_3 0.0
        -J $(arg kinova_robotType)_joint_4 1.3
        -J $(arg kinova_robotType)_joint_5 -2.07
        -J $(arg kinova_robotType)_joint_6 1.4
        -J $(arg kinova_robotType)_joint_7 0.0 " />



  <rosparam file="$(find kinova_control)/config/$(arg kinova_robotName)_control.yaml" command="load"/>

  <node name="$(arg kinova_robotName)_joints_controller" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="$(arg kinova_robotName)" 
    args="effort_joint_trajectory_controller joint_state_controller"/>

 <!-- END SECTION: Gazebo -->

 <!-- BEGIN SECTION: Maintenance (miscellaneous nodes, RViz) -->
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">    
    <remap from="/joint_states" to="/$(arg kinova_robotName)/joint_states"/>    
  </node>

  <!-- set robot initial pose -->
  <node name="robot_init_pose_publisher" pkg="tf" type="static_transform_publisher"
    args="-0.5 0.2 0.8 0 0 0 root j2s7s300_link_base 100"/>

  <node name="command_robot_home_pose" pkg="kinova_control" type="move_robot.py"
        respawn="false" output="screen" args="$(arg kinova_robotType)">       
  </node>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find kinova_gazebo)/rviz/traj_viz.rviz"/> -->
  <node pkg="human_traj_display" name="human_traj_display" type="execute_human_traj_server.py" output="screen" />

  <!-- Launch trajectory controller -->
  <!-- <node pkg="kinova_driver" type="hlpr_trajectory_controller" name="jaco_trajectory_controller" output="screen">
    <param name="sim" value="true" />
    <param name="joint_state_topic" value="/j2s7s300/joint_states" />
  </node> -->

  <!-- END SECTION: Maintenance -->

</launch>